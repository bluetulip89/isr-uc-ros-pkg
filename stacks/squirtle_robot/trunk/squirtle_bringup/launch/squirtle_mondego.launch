<launch>

    <!-- The robot driver -->
    <node name="squirtle_node" pkg="squirtle_driver" type="squirtle_node" output="screen" respawn="true" />

    <!-- The Sonar driver -->
    <node name="sonar_imagenex" pkg="sonar_imagenex" type="sonar_imagenex" output="screen" >
    	<param name="train_angle" value="90" />
    	<param name="sector_width" value="45" />
        <param name="frequency" value="10" />
    	<param name="initial_range" value="5" />
        <param name="gain" value="5" />
    </node>

    <!-- Convert the Sonar scans to a laser message for the navigation stack to use -->
    <node name="sonar_to_laser_node" pkg="sonar_imagenex" type="sonar_to_laser" output="screen"/>

    <!-- The XSens MTi driver -->
    <node name="mti_node" pkg="lse_xsens_mti" type="mti_node" >
        <param name="frame_id" value="imu"/>
    </node>

    <!-- The GPS RTK driver -->
    <node name="rtk_robot_node" pkg="rtk_ros" type="rtk_robot_node" >
        <rosparam file="$(find squirtle_bringup)/settings/ecef_base_station_mondego.yaml" command="load" />
    </node>

    <!-- Localization module -->
    <node name="squirtle_localization_node" pkg="squirtle_driver" type="squirtle_localization_node" output="screen">
        <param name="global_frame_id" value="/world"/>
        <param name="odom_frame_id" value="base_footprint"/>
        <param name="rate" value="2.0"/>
    </node>

    <!-- The robot urdf for visualization -->
    <param name="robot_description" command="$(find xacro)/xacro.py $(find squirtle_description)/urdf/squirtle.urdf" />
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher" />

</launch>
